version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: microservices_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

  # Camunda BPMN Engine
  camunda:
    image: camunda/camunda-bpm-platform:latest
    container_name: camunda
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://postgres:5432/camunda
      DB_USERNAME: postgres
      DB_PASSWORD: password
      WAIT_FOR: postgres:5432
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - microservices-network

  # Eureka Service Discovery
  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - microservices-network

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
    depends_on:
      - postgres
      - eureka-service
    networks:
      - microservices-network

  # Publication Service
  publication-service:
    build:
      context: ./publication-service
      dockerfile: Dockerfile
    container_name: publication-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/publication_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: admin
    depends_on:
      - postgres
      - rabbitmq
      - eureka-service
    networks:
      - microservices-network

  # Frontend React
  frontend:
    build:
      context: ./frontend-publicaciones
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8081
      REACT_APP_PUBLICATION_API_URL: http://localhost:8082
    depends_on:
      - auth-service
      - publication-service
    networks:
      - microservices-network

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  microservices-network:
    driver: bridge 