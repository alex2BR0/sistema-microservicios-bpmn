Write-Host "üöÄ Iniciando despliegue del sistema de microservicios..." -ForegroundColor Green

# Verificar que Docker est√© instalado
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker est√° instalado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado. Por favor, instala Docker Desktop primero." -ForegroundColor Red
    exit 1
}

# Verificar que Docker Compose est√© instalado
try {
    docker-compose --version | Out-Null
    Write-Host "‚úÖ Docker Compose est√° instalado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose no est√° instalado. Por favor, instala Docker Compose primero." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Docker y Docker Compose est√°n instalados" -ForegroundColor Green

# Construir los servicios Java
Write-Host "üî® Construyendo servicios Java..." -ForegroundColor Yellow

# Eureka Service
Write-Host "üì¶ Construyendo Eureka Service..." -ForegroundColor Cyan
Set-Location eureka-service
./mvnw clean package -DskipTests
Set-Location ..

# Auth Service
Write-Host "üì¶ Construyendo Auth Service..." -ForegroundColor Cyan
Set-Location auth-service
./mvnw clean package -DskipTests
Set-Location ..

# Publication Service
Write-Host "üì¶ Construyendo Publication Service..." -ForegroundColor Cyan
Set-Location publication-service
./mvnw clean package -DskipTests
Set-Location ..

Write-Host "‚úÖ Servicios Java construidos" -ForegroundColor Green

# Construir el frontend
Write-Host "üî® Construyendo Frontend..." -ForegroundColor Yellow
Set-Location frontend-publicaciones
npm install
npm run build
Set-Location ..

Write-Host "‚úÖ Frontend construido" -ForegroundColor Green

# Desplegar con Docker Compose
Write-Host "üê≥ Desplegando con Docker Compose..." -ForegroundColor Yellow
docker-compose up -d

Write-Host "‚è≥ Esperando a que los servicios est√©n listos..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# Verificar el estado de los servicios
Write-Host "üîç Verificando estado de los servicios..." -ForegroundColor Yellow

# Verificar Eureka
try {
    Invoke-WebRequest -Uri "http://localhost:8761" -UseBasicParsing | Out-Null
    Write-Host "‚úÖ Eureka Service est√° funcionando en http://localhost:8761" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Eureka Service no est√° respondiendo" -ForegroundColor Red
}

# Verificar Auth Service
try {
    Invoke-WebRequest -Uri "http://localhost:8081/actuator/health" -UseBasicParsing | Out-Null
    Write-Host "‚úÖ Auth Service est√° funcionando en http://localhost:8081" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Auth Service no est√° respondiendo" -ForegroundColor Red
}

# Verificar Publication Service
try {
    Invoke-WebRequest -Uri "http://localhost:8082/actuator/health" -UseBasicParsing | Out-Null
    Write-Host "‚úÖ Publication Service est√° funcionando en http://localhost:8082" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Publication Service no est√° respondiendo" -ForegroundColor Red
}

# Verificar Camunda
try {
    Invoke-WebRequest -Uri "http://localhost:8080" -UseBasicParsing | Out-Null
    Write-Host "‚úÖ Camunda est√° funcionando en http://localhost:8080" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Camunda no est√° respondiendo" -ForegroundColor Red
}

# Verificar Frontend
try {
    Invoke-WebRequest -Uri "http://localhost:3000" -UseBasicParsing | Out-Null
    Write-Host "‚úÖ Frontend est√° funcionando en http://localhost:3000" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Frontend no est√° respondiendo" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéâ ¬°Despliegue completado!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã URLs de acceso:" -ForegroundColor Cyan
Write-Host "   Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "   Auth Service: http://localhost:8081" -ForegroundColor White
Write-Host "   Publication Service: http://localhost:8082" -ForegroundColor White
Write-Host "   Eureka Dashboard: http://localhost:8761" -ForegroundColor White
Write-Host "   Camunda Cockpit: http://localhost:8080" -ForegroundColor White
Write-Host "   RabbitMQ Management: http://localhost:15672" -ForegroundColor White
Write-Host ""
Write-Host "üîß Para detener los servicios:" -ForegroundColor Cyan
Write-Host "   docker-compose down" -ForegroundColor Gray
Write-Host ""
Write-Host "üîß Para ver logs:" -ForegroundColor Cyan
Write-Host "   docker-compose logs -f [servicio]" -ForegroundColor Gray 